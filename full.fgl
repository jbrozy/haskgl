@include (vec3, vec4, mat4) -> types

color = vec4 (vec3 1.0 0.0 0.0) 1.0

dot :: vec3 -> vec3 -> float
dot a b = a.x * b.x + a.y * b.y + a.z * b.z

length :: vec3 -> float
length v :: sqrt dot(v, v)

in vertex :: {
  position :: vec3,
  normal   :: vec3,
  uniforms -> {
      modelMatrix      :: mat4,
      viewMatrix       :: mat4,
      projectionMatrix :: mat4,
      lightPos         :: vec3,
      cameraPos        :: vec3
  }
}

in fragment :: {
  uniforms -> {
      modelMatrix      :: mat4,
      viewMatrix       :: mat4,
      projectionMatrix :: mat4,
      lightPos         :: vec3,
      cameraPos        :: vec3
  }
}

out vertex :: {
  fragPos :: (float, float, float),
  normal  :: (float, float, float)
}

out fragment :: {
  fragColor :: (float, float, float)
}
