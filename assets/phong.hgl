@include (vec3, vec4, mat4) -> types

@main vertex =
    let norm            = normalize normal
        light_dir       = normalize (lightPos - fragPos)
        view_dir        = normalize (cameraPos - fragPos)
        reflect_dir     = reflect (-lightDir) norm

        ambient  = 0.1 * lightColor
        diff     = max (dot norm lightDir) 0.0
        diffuse  = diff * lightColor

        spec     = pow (max (dot viewDir reflectDir) 0.0) 32.0
        specular = spec * lightColor
        result = ambient + diffuse + specular
    @in fragment result
